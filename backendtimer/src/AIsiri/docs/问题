🌐 === API调用: 生成计划 ===
📥 接收到计划生成请求:
  - 目标: 我想学习编程
  - 类型: goal_planning
  - 回答数量: 3
  - 用户ID: 68974d3a68e7adf1e74f68ab

📋 处理用户回答并生成最终计划...
📡 获取用户现有任务: 68974d3a68e7adf1e74f68ab
✅ 成功获取用户任务: 15个任务集, 0个今日任务

🎯 步骤3: 生成详细计划...

🔗 === 计划生成 链条开始 ===
📥 输入数据: {
  userGoal: '我想学习编程',
  goalType: 'goal_planning',
  userAnswers: [ 'c语言吗', '1小时吧', '没有' ],
  existingTasks: {
    collections: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ],
    todayTasks: [],
    occupiedTimeSlots: [
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    totalTasks: 43,
    completedTasks: 0
  }
}
📝 格式化prompt: plan_generator
🔤 变量: {
  user_goal: '我想学习编程',
  goal_type: 'goal_planning',
  user_answers: '问题1: c语言吗\n问题2: 1小时吧\n问题3: 没有',
  existing_tasks: '任务集数量: 15\n' +
    '今日任务: 0\n' +
    '总任务数: 43\n' +
    '已完成: 0\n' +
    '\n' +
    '现有任务集:\n' +
    '- 其他: 0/0 已完成\n' +
    '- 阅读理解专项提升: 0/5 已完成\n' +
    '- 词汇与语法基础巩固: 0/5 已完成\n' +
    '- 真题模拟与反馈: 0/5 已完成\n' +
    '- 主要任务: 0/0 已完成\n' +
    '- 主要任务: 0/0 已完成\n' +
    '- Python入门基础: 0/3 已完成\n' +
    '- 核心语法掌握: 0/3 已完成\n' +
    '- 函数与数据结构: 0/3 已完成\n' +
    '- 项目实践与调试: 0/3 已完成\n' +
    '- 复习与总结: 0/3 已完成\n' +
    '- 日常口语基础训练: 0/4 已完成\n' +
    '- 实用口语表达积累: 0/3 已完成\n' +
    '- 实战口语练习: 0/3 已完成\n' +
    '- 口语能力反馈与优化: 0/3 已完成\n' +
    '\n',
  occupied_time_slots: '已占用时间段:\n' +
    '- 2025-04-30 19:00 (完成一篇六级阅读理解真题练习, 预计60分钟)\n' +
    '- 2025-04-30 19:30 (分析阅读理解错题并整理笔记, 预计60分钟)\n' +
    '- 2025-04-30 20:00 (学习阅读理解答题技巧视频, 预计60分钟)\n' +
    '- 2025-04-30 19:00 (阅读理解长难句专项训练, 预计60分钟)\n' +
    '- 2025-04-30 20:00 (模拟阅读理解限时训练, 预计60分钟)\n' +
    '- 2025-04-30 09:30 (记忆30个六级高频词汇, 预计60分钟)\n' +
    '- 2025-04-30 09:50 (完成一套六级词汇测试题, 预计60分钟)\n' +
    '- 2025-04-30 14:00 (学习一个语法知识点并做练习, 预计60分钟)\n' +
    '- 2025-04-30 20:40 (整理本周高频词汇错词本, 预计60分钟)\n' +
    '- 2025-04-30 20:40 (完成一次词汇综合测试, 预计60分钟)\n' +
    '- 2025-04-20 14:00 (完成一套完整六级真题模拟考试, 预计60分钟)\n' +
    '- 2025-04-21 19:00 (分析模拟试卷阅读部分错题, 预计60分钟)\n' +
    '- 2025-04-21 19:40 (总结模拟试卷整体情况, 预计60分钟)\n' +
    '- 2025-04-27 14:00 (完成第二套六级真题模拟考试, 预计60分钟)\n' +
    '- 2025-04-28 19:00 (分析第二套试卷并调整复习计划, 预计60分钟)\n' +
    '- 2025-05-05 14:00 (安装Python解释器和IDE, 预计60分钟)\n' +
    '- 2025-05-06 19:00 (运行第一个Python程序, 预计60分钟)\n' +
    '- 2025-05-07 09:30 (学习Python基本输入输出, 预计60分钟)\n' +
    '- 2025-05-10 14:00 (学习变量与基本数据类型, 预计60分钟)\n' +
    '- 2025-05-11 19:00 (掌握条件语句if-else, 预计60分钟)\n' +
    '- 2025-05-12 09:30 (掌握循环语句for和while, 预计60分钟)\n' +
    '- 2025-05-15 14:00 (定义并调用函数, 预计60分钟)\n' +
    '- 2025-05-16 19:00 (操作列表和元组, 预计60分钟)\n' +
    '- 2025-05-17 09:30 (使用字典进行键值操作, 预计60分钟)\n' +
    '- 2025-05-25 14:00 (开发简易计算器, 预计60分钟)\n' +
    '- 2025-05-26 19:00 (学习异常处理try-except, 预计60分钟)\n' +
    '- 2025-05-27 09:30 (使用调试器调试Python程序, 预计60分钟)\n' +
    '- 2025-06-01 14:00 (整理Python学习笔记, 预计60分钟)\n' +
    '- 2025-06-02 19:00 (完成一次Python基础测试, 预计60分钟)\n' +
    '- 2025-06-03 09:30 (总结学习经验并制定进阶计划, 预计60分钟)\n' +
    '- 2025-06-30 07:00 (完成每日英语口语发音练习10分钟, 预计60分钟)\n' +
    '- 2025-06-30 07:10 (跟读日常对话音频10分钟, 预计60分钟)\n' +
    '- 2025-06-30 07:20 (复述短文并录音5分钟, 预计60分钟)\n' +
    '- 2025-06-30 10:00 (学习并背诵5个日常口语句型, 预计60分钟)\n' +
    '- 2025-06-30 15:00 (每周学习一个主题场景对话, 预计60分钟)\n' +
    '- 2025-06-28 20:00 (整理并复习本周所学口语表达, 预计60分钟)\n' +
    '- 2025-06-30 20:30 (观看并模仿英语情景剧片段, 预计60分钟)\n' +
    '- 2025-06-30 21:00 (每日进行5分钟英语自言自语, 预计60分钟)\n' +
    '- 2025-06-30 20:00 (每周参加一次线上英语角, 预计60分钟)\n' +
    '- 2025-06-15 14:00 (模拟面试或演讲练习, 预计60分钟)\n' +
    '- 2025-06-30 21:05 (每日录音并复盘5分钟口语练习, 预计60分钟)\n' +
    '- 2025-06-30 20:30 (每周与语言伙伴进行反馈交流, 预计60分钟)\n' +
    '- 2025-06-15 14:00 (每月进行一次口语水平测试, 预计60分钟)\n'
}
🤖 调用LLM...
📤 输入prompt长度: 3447
info: ::1 - - [12/Aug/2025:05:35:26 +0000] "POST /api/ai/generate-plan HTTP/1.1" - - "http://localhost:8081/" "Mozilla/5.0 (Linux; Android 13; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36" {"service":"aisiri-backend","timestamp":"2025-08-12T05:35:26.423Z"}
📥 LLM响应长度: 5848
💰 Token使用: {
  prompt_tokens: 2401,
  completion_tokens: 2025,
  total_tokens: 4426,
  prompt_tokens_details: { cached_tokens: 0 }
}
✅ JSON解析成功
🔍 验证计划格式...
✅ 计划验证完成，包含3个任务集
📤 输出结果: {
  plan_overview: '用户目标为学习编程，根据用户回答，将重点放在C语言入门学习，每天投入1小时左右，结合现有任务安排，合理规划时间，避免冲突。计划包括准备学习环境、掌握基础语法、进行项目实践三个主要任务集，每个任务集下分解为具体可执行的任务。',
  collections: [
    {
      name: 'C语言学习环境准备',
      description: '为学习C语言做好环境搭建和资料准备，确保能够顺利开始编程学习。',
      tasks: [Array]
    },
    {
      name: 'C语言基础语法掌握',
      description: '从基础语法开始逐步学习C语言，包括变量、数据类型、控制结构、函数等核心内容。',
      tasks: [Array]
    },
    {
      name: 'C语言项目实践与调试',
      description: '通过实际项目练习巩固所学知识，并学习调试技巧，提高问题解决能力。',
      tasks: [Array]
    }
  ],
  suggestions: '建议每天固定1小时（如晚上19:30-20:30）进行C语言学习，避免与其他任务冲突。优先完成基础语法部分，再进入项目实践。在完成任务后，及时整理笔记和总结，便于后续复习。合理安排时间，避免疲劳学习，保持持续进步。'
}
🔗 === 计划生成 链条结束 ===


💾 步骤4: 导入计划到数据库...

🚀 开始执行计划实施...
📁 创建任务集: C语言学习环境准备
📡 创建任务集: C语言学习环境准备
✅ 任务集创建成功: C语言学习环境准备
⏰ 时间冲突解决: 安装C语言编译器（GCC） 14:00 → 07:00
📡 批量创建任务: 3个
✅ 批量任务创建成功: 3个任务
✅ 成功创建 3 个任务
📁 创建任务集: C语言基础语法掌握
📡 创建任务集: C语言基础语法掌握
✅ 任务集创建成功: C语言基础语法掌握
⏰ 时间冲突解决: 掌握C语言循环语句（for/while） 19:30 → 07:00
📡 批量创建任务: 5个
✅ 批量任务创建成功: 5个任务
✅ 成功创建 5 个任务
📁 创建任务集: C语言项目实践与调试
📡 创建任务集: C语言项目实践与调试
✅ 任务集创建成功: C语言项目实践与调试
📡 批量创建任务: 5个
✅ 批量任务创建成功: 5个任务
✅ 成功创建 5 个任务
🎉 计划实施完成: 3个任务集, 13个任务
📤 计划生成结果: 成功
🌐 === 计划生成API调用结束 ===
